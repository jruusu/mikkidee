<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Mikki Dee</title>
    <script src="//code.jquery.com/jquery-2.0.3.min.js"></script>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
    <!--[if lte IE 8]>
        <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.ie.css" />
    <![endif]-->
    <script src="//cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.3/moment-with-locales.js"></script>
    <style>
      html, body {
        height: 100%;
        min-height: 100%;
        margin: 0;
        padding: 0;
      }
      #map {
        width: 100%;
        height: 100%;
        min-height: 800px;
      }
    </style>
  </head>
  <body>
    <div id="map"></div>

    <script type="text/javascript">
      var map = L.map('map').setView([{{ lat }}, {{ lng }}], 7);

      var osm = L.tileLayer('http://otile{s}.mqcdn.com/tiles/1.0.0/map/{z}/{x}/{y}.jpeg', {
          minZoom: 13,
          maxZoom: 16,
          attribution: 'Tiles Courtesy of <a href="http://www.mapquest.com/">MapQuest</a> &mdash; Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
          subdomains: '1234'
      });

      osm.addTo(map);

      var stamen = L.tileLayer('http://{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.jpg', {
        attribution: 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
        subdomains: 'abcd',
        minZoom: 3,
        maxZoom: 13
      });

      stamen.addTo(map);

      function fixTime(t) {
        var m;
        if ((m = /([0-9]{2}):00/.exec(t)) != null) {
          return m[1];
        } else {
          return t;
        }
      }

      function timeTable(properties) {
        var ret = properties.address + ", " + properties.city + "<br/>";
        ret += '<table><tr>';
        for (var i = 0; i < 7; i++) {
          ret += '<td>';
          var hours = properties.openhours[i].split(',');
          if (hours[0] === 'always') {
            ret += '24/7';
          } else {
            ret += fixTime(hours[0]) + '-' + fixTime(hours[1]);
          }
          ret += '</td>';
        }
        ret += '</tr></table>';
        return ret;
      }

      $.ajax({
        dataType: "json",
        url: '/data',
        async: true
      }).then(
        function(data, status, xhr) {
          L.geoJson([data], {
            style: function (feature) {
              return feature.properties && feature.properties.style;
            },
            onEachFeature: function(feature, layer) {
              layer.bindPopup(timeTable(feature.properties));
            },
            pointToLayer: function (feature, latlng) {
              return L.circleMarker(latlng, {
                radius: 8,
                fillColor: "#ff7800",
                color: "#000",
                weight: 1,
                opacity: 1,
                fillOpacity: 0.8
              });
            }
          }).addTo(map);
        },
        function() {}
      );
    </script>

  </body>

</html>
